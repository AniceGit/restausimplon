services:
  db:
    image: postgres:16
    container_name: mon_postgres1
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - mon_network
    volumes:
      - data_postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: fastapi_app
    restart: always
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DATABASE_URL=${DATABASE_URL}

    networks:
      - mon_network
    ports:
      - "8000:8000"

  faker:
      build:
        context: .
        dockerfile: Dockerfile.api 
      container_name: restau_faker
      command: python -m app.scripts.fake_data
      depends_on:
        db:
          condition: service_healthy
      networks:
        - mon_network

networks:
  mon_network:
    driver: bridge
    
volumes:
  data_postgres: